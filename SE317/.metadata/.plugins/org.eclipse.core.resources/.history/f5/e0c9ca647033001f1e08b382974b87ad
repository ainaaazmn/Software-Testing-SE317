package lab6;

import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class ATMandUtilityTestDataStorage {

	private String checkingFile;
	private String savingFile;
	
	private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
	
	  @Before
      public void setUp() {
	  
		checkingFile = "CheckingAccountStorage.txt";
		savingFile = "SavingAccountStorage.txt";
		
	    ATMandUtility.checkingFile = checkingFile;
	    ATMandUtility.savingFile = savingFile;
	    
	    System.setOut(new PrintStream(outContent));
      }
	  
	  @After
	  public void tearDown() {
		  deleteTempFile(checkingFile);
		  deleteTempFile(savingFile);
		
		  System.setOut(null);
	  }
	  
	  @Test
	  public void testNullStorage() {
	      // Test for null storage (file not found)
	      ATMandUtility.checking = null;
	      ATMandUtility.saving = null;
	      
	      createTempFile(checkingFile, "balance=1000.0\ninvalid_line\nbalance=2000.0\n");
		  createTempFile(savingFile, "balance=5000.0\ninvalid_line\nbalance=6000.0\n");

	      ATMandUtility.initializeCheckingAccount();
	      String consoleOutputChecking = outContent.toString();
	      assertTrue(consoleOutputChecking.contains("File not found"));

	      ATMandUtility.initializeSavingAccount();
	      String consoleOutputSaving = outContent.toString();
	      assertTrue(consoleOutputSaving.contains("File not found"));
	  }

	  @Test
	  public void testNullElementWithMultipleElement() {
		  
		 createTempFile(checkingFile, "balance=1000.0\ninvalid_line\nbalance=2000.0\n");
	     createTempFile(savingFile, "balance=5000.0\ninvalid_line\nbalance=6000.0\n");
	     
	     ATMandUtility.initializeCheckingAccount();
	    // assertNotNull("Expected non-null CheckingAccount", ATMandUtility.checking);
	     
	     ATMandUtility.initializeSavingAccount();
	    // assertNotNull("Expected non-null SavingAccount", ATMandUtility.saving);
	     
	     
	  }
	
	  private void createTempFile(String fileName, String content) {
		  
	    try (FileWriter writer = new FileWriter(fileName)) {
	        writer.write(content);
	    } catch (IOException e) {
	        fail("Failed to create temporary file: " + fileName);
	    }
	  }

	private void deleteTempFile(String fileName) {
		
		File file = new File(fileName);
		
		if(file.exists()) {
			
			file.delete();
		}
		
	}
}
